@model museumProj.Models.menument

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutDash.cshtml";
}

<h2>Create menument</h2>

@using (Html.BeginForm("create", "menuments", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>QR code will be generated Automatically for each menument .. All You have to do is to scan it ....</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.place_id, "Main Place", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("place_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.place_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.description, new { @class = "form-control", rows = "3", cols = "5" })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.voice_note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Audio_file" class="form-control btn btn-outline-info" value="Choose Audio File .." />
            @Html.ValidationMessageFor(model => model.voice_note, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"> Logo Image </label>
        <div class="col-md-10">
            <input type="file" name="Logo_file" class="form-control btn btn-outline-info" value="Choose Image .." />
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.QR_image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QR_image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QR_image, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.no_of_scans, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.no_of_scans, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.no_of_scans, "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null,new { @class="btn btn-primary"})
</div>
